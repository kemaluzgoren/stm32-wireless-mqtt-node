name: CI/CD - Build and Conditional Release for STM32 Firmware

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2️⃣ Build STM32CubeIDE project
      - name: Build STM32CubeIDE project
        uses: xanderhendriks/action-build-stm32cubeide@v15.0
        with:
          project-path: '.'
          project-target: 'stm32_wireless_mqtt_node/Debug'

      # 3️⃣ List build output for debugging
      - name: List files after build
        run: |
          echo "=== Build output ==="
          ls -R stm32_wireless_mqtt_node/Debug || true

      # 4️⃣ Extract version info (only if version tag or version string exists)
      - name: Extract version or tag
        id: extract_version
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          TAG_NAME=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          echo "Found tag: $TAG_NAME"
          echo "Commit message: $COMMIT_MSG"

          if [[ "$COMMIT_MSG" =~ (v[0-9]+\.[0-9]+\.[0-9]+) ]]; then
            VERSION=${BASH_REMATCH[1]}
            echo "VERSION_SOURCE=commit" >> $GITHUB_OUTPUT
            echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          elif [[ ! -z "$TAG_NAME" ]]; then
            echo "VERSION_SOURCE=tag" >> $GITHUB_OUTPUT
            echo "VERSION=$TAG_NAME" >> $GITHUB_OUTPUT
          else
            echo "VERSION_SOURCE=none" >> $GITHUB_OUTPUT
          fi

      # 5️⃣ Create Release only if version is detected
      - name: Create GitHub Release
        if: ${{ steps.extract_version.outputs.VERSION_SOURCE != 'none' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.extract_version.outputs.VERSION }}
          name: "STM32 Firmware ${{ steps.extract_version.outputs.VERSION }}"
          files: |
            **/*.elf
            **/*.bin
            **/*.hex
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 6️⃣ Always upload artifacts for inspection
      - name: Upload Firmware Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: stm32-firmware-artifacts
          path: |
            **/*.elf
            **/*.bin
            **/*.hex
